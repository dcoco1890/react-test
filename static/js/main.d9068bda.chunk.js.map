{"version":3,"sources":["components/ProductItem/ProductItem.js","redux/actions.js","components/ProductView/ProductView.js","redux/reducer.js","redux/store.js","index.js","App.js"],"names":["ProductItem","connect","dispatch","ownProps","number","pricing","log","type","payload","_ref","img","name","react_default","a","createElement","className","src","alt","onClick","ProductView","state","props","map","item","ProductItem_ProductItem","key","rootReducer","arguments","length","undefined","action","console","store","createStore","products","ReactDOM","render","es","ProductView_ProductView","document","getElementById"],"mappings":"y2BAuCeA,eAFKC,YAAQ,KAhCD,SAACC,EAAUC,GAAa,IAGzCC,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QAChB,MAAO,CACLC,IAAK,kBAAMJ,ECNwB,CACrCK,KAJoB,gBAKpBC,QDIkC,CAAEJ,OAAQA,EAAQC,QAASA,QA2B3CJ,CArBS,SAAAQ,GAAyC,IAAtCC,EAAsCD,EAAtCC,IAAKC,EAAiCF,EAAjCE,KAAMP,EAA2BK,EAA3BL,OAAQC,EAAmBI,EAAnBJ,QAASC,EAAUG,EAAVH,IAC1D,OACEM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKN,EAAKO,IAAI,wBAErBL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBJ,GAChCC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAAb,WACUH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeX,IAEzCQ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,IAAwBV,GACxBO,EAAAC,EAAAC,cAAA,UAAQI,QAAS,kBAAMZ,KAAOS,UAAU,gBAAxC,oBEEOI,EAFKlB,YAvBI,SAAAmB,GACtB,MAAO,CAAEA,UAsBSnB,CAlBS,SAAAoB,GAC3B,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACZM,EAAMD,MAAME,IAAI,SAAAC,GACf,OACEX,EAAAC,EAAAC,cAACU,EAAD,CACEd,IAAKa,EAAKb,IACVC,KAAMY,EAAKZ,KACXN,QAASkB,EAAKlB,QACdD,OAAQmB,EAAKnB,OACbqB,IAAKF,EAAKZ,YCZtB,IAWee,EAXK,WAAwB,IAAvBN,EAAuBO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1C,OAAQC,EAAOvB,MACb,IAAK,gBAGH,OADAwB,QAAQzB,IAAIwB,EAAOtB,SACZY,EACT,QACE,OAAOA,mBCREY,EAHDC,YAAYP,EAAaQ,GCKvCC,IAASC,OACPxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAUL,MAAOA,GACfpB,EAAAC,EAAAC,cCRW,WACb,OACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACwB,EAAD,QDIF,OAEFC,SAASC,eAAe","file":"static/js/main.d9068bda.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logPartInfo } from \"../../redux/actions\";\r\nimport \"./Product.css\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  // originally I had this as objToLog = {...ownprops} but\r\n  // instructions said just price and part\r\n  const { number, pricing } = ownProps;\r\n  return {\r\n    log: () => dispatch(logPartInfo({ number: number, pricing: pricing }))\r\n  };\r\n};\r\n\r\n// I think this should classify as reusable. Gets the object keys as props and\r\n// the log function created by mapdispatchtoprops\r\nconst ConnectedProductItem = ({ img, name, number, pricing, log }) => {\r\n  return (\r\n    <div className=\"product-list-item\">\r\n      <div className=\"product-img\">\r\n        <img src={img} alt=\"a battery for sale\" />\r\n      </div>\r\n      <div className=\"product-info-section\">\r\n        <h3 className=\"product-header\">{name}</h3>\r\n        <p className=\"part-number-identifier\">\r\n          PartNo: <span className=\"part-number\">{number}</span>\r\n        </p>\r\n        <h5 className=\"price\">${pricing}</h5>\r\n        <button onClick={() => log()} className=\"add-cart-btn\">\r\n          Add to Cart\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// connecting with react-redux\r\nconst ProductItem = connect(null, mapDispatchToProps)(ConnectedProductItem);\r\n\r\nexport default ProductItem;\r\n","// In a bigger application, I would have this in a constants file and import it.\r\nconst LOG_PART_INFO = \"LOG_PART_INFO\";\r\n\r\n// standard action creator, returns object with type and a payload.\r\nexport const logPartInfo = payload => ({\r\n  type: LOG_PART_INFO,\r\n  payload\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ProductItem from \"../ProductItem/ProductItem\";\r\n\r\n// Grab state as properties\r\nconst mapStateToProps = state => {\r\n  return { state };\r\n};\r\n\r\n// loop/map through state and return a product Item\r\nconst ConnectedProductView = props => {\r\n  return (\r\n    <div className=\"products\">\r\n      {props.state.map(item => {\r\n        return (\r\n          <ProductItem\r\n            img={item.img}\r\n            name={item.name}\r\n            pricing={item.pricing}\r\n            number={item.number}\r\n            key={item.name}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProductView = connect(mapStateToProps)(ConnectedProductView);\r\n\r\nexport default ProductView;\r\n","// ***I'm not sure if this works, or if it would have been better to do\r\n// it this way, but I'm keeping it here just in case this way would be preferred ****\r\n// import products from \"../../products.json\";\r\n// const initialState = products;\r\n\r\n// Actual Code\r\n// I don't think I even really need the switch statement but\r\n// might help if it ever needed to scale up.\r\nconst rootReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"LOG_PART_INFO\":\r\n      // This is the thing that's actually logging in the console.\r\n      console.log(action.payload);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import rootReducer from \"./reducer\";\r\nimport { createStore } from \"redux\";\r\nimport products from \"../products.json\";\r\n\r\nconst store = createStore(rootReducer, products);\r\n// Testing to see if store gets loaded properly\r\n// console.log(store.getState());\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n// Create Store, Wrap the Provider Component to the App\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\nimport ProductView from \"../src/components/ProductView/ProductView\";\n\nexport default function App() {\n  return (\n    <div>\n      <h1>Products</h1>\n      <ProductView />\n    </div>\n  );\n}\n"],"sourceRoot":""}